{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","services/pixabayApi.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","pixabayApi","fetchApi","inputText","page","fetch","then","response","ok","json","Promise","reject","Error","Searchbar","state","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","info","props","onSubmit","className","s","this","SearchForm","type","SearchFormButton","SearchFormLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","name","Component","ImageGalleryItem","id","webformatURL","tags","largeImageURL","onClick","src","alt","ImageGalleryItem_image","ImageGallery","images","imageGallery","map","ComponentLoader","color","height","width","timeout","Button","handleLoadMore","Modal","Overlay","App","loading","eror","showModal","setTimeout","data","prevState","hits","window","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","error","finally","toggleModal","prevProps","massege","length","autoClose","position","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3a2c5018.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2Hwon\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__34Xbl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__M09Gp\",\"Modal\":\"Modal_Modal__2jrt6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__1SSlS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2yaC8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1i5TQ\",\"SearchForm\":\"Searchbar_SearchForm__2cgy3\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2VDun\",\"SearchFormLabel\":\"Searchbar_SearchFormLabel__2B_qR\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3yvGN\"};","function fetchApi(inputText ='cats', page) {\n    return fetch(\n        `https://pixabay.com/api/?key=22345544-d7e856a59bd0b8410f42b3802&q=${inputText}&image_type=photo&orientation=horizontal&page=${page}&per_page=12`,\n    ).then(response => {\n        if (response.ok) {\n            return response.json();\n        }\n        return Promise.reject(\n            new Error(`Не найдено изображения с названием ${inputText}`),\n        );\n    });\n}\n\nconst pixabayApi = { fetchApi };\n\nexport default pixabayApi;\n","// Компонент принимает один проп `onSubmit` - функцию для передачи значения инпута\n// при сабмите формы. Создает DOM-элемент следующей структуры.\n\nimport { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n    state = {\n        inputText: '',\n    };\n\n    //  обновление стейта на при нажатии на инпут\n    handleNameChange = event => {\n        this.setState({ inputText: event.currentTarget.value.toLowerCase() });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        if (this.state.inputText.trim() === '') {\n            // return alert('Введите  название в поиске');\n            return toast.info('Введите  название в поиске!');\n        }\n\n        this.props.onSubmit(this.state.inputText);\n        this.setState({ inputText: '' });\n    };\n\n    render() {\n        return (\n            <header className={s.Searchbar}>\n                <form onSubmit={this.handleSubmit} className={s.SearchForm}>\n                    <button type=\"submit\" className={s.SearchFormButton}>\n                        <span className={s.SearchFormLabel}>Search</span>\n                    </button>\n\n                    <input\n                        className={s.SearchFormInput}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                        value={this.state.inputText}\n                        onChange={this.handleNameChange}\n                        name=\"inputText\"\n                    />\n                </form>\n            </header>\n        );\n    }\n}\n","// Компонент элемента списка с изображением. Создает DOM-элемент следующей\n// структуры.\n// ```html\n// <li className=\"ImageGalleryItem\">\n//   <img src=\"\" alt=\"\" className=\"ImageGalleryItem-image\" />\n// </li>\n// ```;\nimport s from './ImageGalleryItem.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({ id, webformatURL, tags, largeImageURL, onClick }) {\n    return (\n        <li key={id} className={s.ImageGalleryItem} onClick = {() => onClick(largeImageURL)}>\n            <img\n                src={webformatURL}\n                alt={tags}\n                className={s.ImageGalleryItem_image}\n            />\n        </li>\n    );\n}\n\n\nImageGalleryItem.propTypes = {\n    ondeleteContact: PropTypes.func,\n    contacts: PropTypes.array,\n};\n","// Список карточек изображений. Создает DOM-элемент следующей структуры.\n// ```html\n// <ul className=\"ImageGallery\">\n//   <!-- Набор <li> с изображениями -->\n// </ul>\n// ```;\n\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\nimport s from './ImageGallery.module.css';\n\nexport default function ImageGallery({ images, onClick }) {\n    // console.log(images)\n    return (\n        <ul className={s.imageGallery}>\n            {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n                <ImageGalleryItem\n                    key={id}\n                    webformatURL={webformatURL}\n                    largeImageURL={largeImageURL}\n                    tags={tags}\n                    onClick={onClick}\n                />\n            ))}\n        </ul>\n    );\n}\n","// Компонент спинера, отображется пока идет загрузка изобаржений. Используй любой\n// готовый компонент, например\n// [react-loader-spinner](https://github.com/mhnpd/react-loader-spinner) или любой\n// другой.\n\nimport Loader from \"react-loader-spinner\";\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default function ComponentLoader() {\n    return (\n        <div>\n            <Loader\n                type=\"TailSpin\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n                timeout={10000}\n            />\n            Loading...\n        </div>\n    );\n}\n","// При нажатии на кнопку `Load more` должна догружаться следующая порция\n// изображений и рендериться вместе с предыдущими. После загрузки и рендера новой\n// партии изображений страница должна плавно скролиться. Для скрола используй\n// следующий код.\n\n// ```js\n// window.scrollTo({\n//   top: document.documentElement.scrollHeight,\n//   behavior: 'smooth',\n// });\n// ```\n\n// Кнопка должна рендерится только тогда, когда есть какие-то загруженные\n// изобаржения. Если массив изображений пуст, кнопка не рендерится.\n\n// import React from 'react';\nimport s from './Button.module.css';\n\nexport default function Button({ handleLoadMore }) {\n    return (\n        <button className={s.Button} onClick={handleLoadMore}>\n            Load more\n        </button>\n    );\n}\n","// При клике по элементу галереи должно открываться модальное окно с темным\n// оверлеем и отображаться большая версия изображения. Модальное окно должно\n// закрываться по нажатию клавиши `ESC` или по клику на оверлее.\n\n// Внешний вид похож на функционал этого\n// [VanillaJS-плагина](https://basiclightbox.electerious.com/), только вместо\n// белого модального окна рендерится изображение (в примере нажми `Run`). Анимацию\n// делать не нужно!\n\n// ```html\n// <div className=\"Overlay\">\n//   <div className=\"Modal\">\n//     <img src=\"\" alt=\"\" />\n//   </div>\n// </div>\n// ```\n\nimport s from './Modal.module.css';\n\nexport default function Modal({ largeImageURL, tags, onClick }) {\n    return (\n      <div className={s.Overlay} onClick={onClick}>\n  <div className={s.Modal}>\n    <img src={largeImageURL} alt={tags} />\n  </div>\n</div>\n    );\n}","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\n\nimport './App.css';\nimport pixabayApi from './services/pixabayApi';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport ComponentLoader from './components/Loader/Loader';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal'\n\nexport default class App extends Component {\n    state = {\n        inputText: '',\n        loading: false,\n        eror: null,\n        page: 1,\n        images: [],\n        showModal: false,\n        largeImageURL: ''\n    };\n\n  componentDidMount () {\n    // this.setState({loading: true})\n    pixabayApi.fetchApi(this.state.inputText, this.state.page).then(data => this.setState ({images: data.hits}))\n    .catch(error => this.setState(error))\n    // .finally (() => this.setState({loading: false}))\n  }\n\ncomponentDidUpdate(prevProps, prevState) {\n  if (this.state.inputText !== prevState.inputText) {\n    // this.setState({loading: true, images: [], page: 1})\n    this.handleLoadMore();\n//     // console.log('Change')\n//     // console.log(prevState.inputText);\n//   // console.log(this.state.inputText);\n//   this.setState({loading: true, images: [], page: 1})\n//   setTimeout(()=>{\n//     pixabayApi.fetchApi(this.state.inputText, this.state.page).then(data => {\n//       this.setState(prevState => ({images: data.hits}));\n//       // console.log(this.state.images);\n//       // console.log(this.state.page);\n//   })\n//   .catch(error => this.setState({error}))\n//   .finally (() => this.setState({loading: false}))\n//   },500)\n  }\n}\n\n\nhandleSubmit = inputText => {\n  // console.log(inputText);\n  this.setState({ inputText});\n}\n\n      handleLoadMore = () => {\n        this.setState({loading: true, images: [], page: 1})\n        setTimeout(()=>{\n            pixabayApi\n                .fetchApi(this.state.inputText, this.state.page+1)\n                .then(data => {\n                    this.setState(prevState => ({\n                        images: [...prevState.images, ...data.hits],\n                        page: prevState.page + 1,\n                    }));\n                    // console.log(this.state.images);\n                    // console.log(this.prevState.images);\n                    // console.log(this.state.images);\n                    // console.log(this.state.page);\n                         window.scrollTo({\n  top: document.documentElement.scrollHeight,\n  behavior: 'smooth'})\n                })\n                .catch(error => this.setState(error))\n                .finally (() => this.setState({loading: false}))\n              },500)\n        };\n        \n        toggleModal = (largeImageURL) => {\n          this.setState(state => ({\n            showModal: !state.showModal,\n            largeImageURL: largeImageURL\n          }))\n        }\n\n  render () {\n\n    const {images, loading, error, showModal, largeImageURL} = this.state\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleSubmit}/>\n        {error && <h1>{error.massege}</h1>}\n        {loading && <ComponentLoader/>}\n        {images.length === 0 && !loading && <h1>Картинок с таким названием не найдено!</h1>}\n        {/* {!this.state.inputText && <div>Введите имя пакемона</div>} */}\n        {images && <ImageGallery images={images} onClick ={this.toggleModal}/>}\n        {images.length > 0 && <Button handleLoadMore={this.handleLoadMore}/>}\n        {showModal && <Modal onClick ={this.toggleModal} largeImageURL={largeImageURL}/>}\n        <ToastContainer autoClose={3000} position=\"top-center\" />\n      </div>\n    ) \n  }\n\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}